---

---

<div class="progress-wrap" id="progress-scroll">
    <svg class="progress-circle svg-content" width="100%"       height="100%" viewBox="-1 -1 102 102">
          <path d="M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98" />
    </svg>
  </div>

  <style>
    .progress-wrap {
  left: 50px;
  bottom: 50px;
  color: white;
  position: fixed;
  height: 46px;
  width: 46px;
  cursor: pointer;
  border-radius: 50px;
  box-shadow: inset 0 0 0 2px white;
  z-index: 999;
  opacity: 0;
  visibility: hidden;
  transform: translateY(15px);
  transition: all 200ms linear;
}

.progress-wrap input {
  z-index: 10001;
}

.progress-wrap input:checked + html {
  scroll-snap-type: unset;
}

.progress-wrap.active-progress {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.progress-wrap::after {
  position: absolute;
  content: '↑';
  text-align: center;
  line-height: 46px;
  font-size: 24px;
  color: rgba(255, 89, 0, 1);
  left: 0;
  top: -2px;
  height: 46px;
  width: 46px;
  cursor: pointer;
  display: block;
  z-index: 1;
  transition: all 200ms linear;
}

.progress-wrap:hover::after {
  opacity: 0;
}

.progress-wrap:hover::before {
  opacity: 1;
}

.progress-wrap::before {
  position: absolute;
  content: '↑';
  text-align: center;
  line-height: 46px;
  font-size: 24px;
  opacity: 0;
  -webkit-text-fill-color: rgba(255, 89, 0, 1);
  left: 0;
  top: -2px;
  height: 46px;
  width: 46px;
  cursor: pointer;
  display: block;
  z-index: 2;
  transition: all 200ms linear;
}

.progress-wrap svg path {
  fill: none;
}

.progress-wrap svg.progress-circle path {
  stroke: rgba(255, 89, 0, 1);
  stroke-width: 4;
  box-sizing: border-box;
  transition: all 200ms linear;
}

  </style>

  <script>
    // scrolling for top

const scroller = document.getElementById("progress-scroll");

if (scroller) {
  scroller.addEventListener("click", () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  });
}

document.addEventListener("DOMContentLoaded", () => {
  "use strict";

  // Scroll back to top

  const progressPath = document.querySelector('.progress-wrap path') as SVGPathElement | null;

  if (progressPath) {
    const pathLength = progressPath.getTotalLength();

    progressPath.style.transition = 'none';
    progressPath.style.strokeDasharray = `${pathLength} ${pathLength}`;
    progressPath.style.strokeDashoffset = `${pathLength}`;
    progressPath.getBoundingClientRect();
    progressPath.style.transition = 'stroke-dashoffset 10ms linear';

    const updateProgress = () => {
      const scroll = window.scrollY || document.documentElement.scrollTop;
      const height = document.documentElement.scrollHeight - window.innerHeight;
      const progress = pathLength - (scroll * pathLength / height);
      progressPath.style.strokeDashoffset = `${progress}`;
    };

    window.addEventListener('scroll', updateProgress);

    const offset = 50;

    window.addEventListener('scroll', () => {
      if (window.scrollY > offset) {
        const progressWrap = document.querySelector('.progress-wrap');
        if (progressWrap) {
          progressWrap.classList.add('active-progress');
        }
      } else {
        const progressWrap = document.querySelector('.progress-wrap');
        if (progressWrap) {
          progressWrap.classList.remove('active-progress');
        }
      }
    });
  }
});
  </script>